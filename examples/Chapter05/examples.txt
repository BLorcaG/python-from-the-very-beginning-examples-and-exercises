l = list('tumultuous')


str(l)


def join(l):
    s = ''
    for x in l:
        s = s + x
    return s


''.join(l)


' '.join(l)


s = '   Once   upon a    time   '

s.split()


s = 'Once upon a time'

s.find('upon')

s.find('not there')


s = 'Once upon a time'
s[:4]

s[:-4]

s[-4:]


s = 'The first sentence. And the second...'

pos = s.find('.')

pos

s[:pos + 1]


l = [1, 2, 3, 2, 1, 3, 2]

l.sort()

l


l = [1, 2, 3, 2, 1, 3, 2]

sorted(l)

l


l = [1, 2, 3, 4, 5]

def square(x): return x * x

list(map(square, l))


l = [1, 2, 3, 4, 5]

def even(x): return x % 2 == 0

list(filter(even, l))


l = [1, 2, 3, 4, 5]

def square(x): return x * x

for x in map(square, l):
    print(x)


reversed([1, 4, 3, 2])


[x * x for x in range(10)]

[str(x) for x in range(10)]

[x % 2 == 0 for x in range(10)]


[x * x * x for x in range(20) if (x * x * x) % 2 == 0]

